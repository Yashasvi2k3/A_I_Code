import java.util.Scanner;

public class EightQueensBacktracking {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
System.out.print("Enter the board size (e.g., 8 for an 8x8
chessboard): ");
int boardSize = scanner.nextInt();

System.out.println("All Possible Solution for given
chessboard is");

Yashasvi Srivastava
AP21110011035

int[][] chessboard = new int[boardSize][boardSize];
findAllSolutions(chessboard, 0);
}

private static boolean isSafe(int[][] board, int row, int col) {
for (int i = 0; i < row; i++) {
if (board[i][col] == 1) return false;
if (col - (row - i) >= 0 && board[i][col - (row - i)] == 1)
return false;
if (col + (row - i) < board.length && board[i][col + (row

- i)] == 1) return false;
}
return true;
}

private static void findAllSolutions(int[][] board, int row) {
if (row == board.length) {
printSolution(board);
System.out.println();
return;
}

for (int col = 0; col < board.length; col++) {
if (isSafe(board, row, col)) {
board[row][col] = 1;
findAllSolutions(board, row + 1);
board[row][col] = 0;
}
}
}

private static void printSolution(int[][] board) {
for (int[] row : board) {
for (int cell : row) {
System.out.print(cell == 1 ? "Q " : ". ");
}
System.out.println();
}
}
}