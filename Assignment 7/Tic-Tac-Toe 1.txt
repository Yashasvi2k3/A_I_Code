// 1. Design an agent to identify the terminal points of a TIC-TAC-TOE game.
// The agent is supposed to return

// +1 if agent wins (win for 1)
// 0 in case of tie
// -1 if agent loses
class asgn_7
{
public static void main(String[] args)
{
char ttt[][]=
{
{&#39;1&#39;, &#39;0&#39;, &#39;1&#39;},
{&#39;0&#39;, &#39;1&#39;, &#39;0&#39;},
{&#39; &#39;, &#39; &#39;, &#39;1&#39;}
};

int st = agent(ttt);
if(st==1)
{
System.out.println(&quot;Agent Wins..&quot;);
}
else if(st==-1)
{
System.out.println(&quot;Agent Lost..&quot;);
}
else
{

System.out.println(&quot;Tie Match..&quot;);
}
System.out.println();
}

static int agent(char[][] ttt)
{

// 00 01 02
// 10 11 12
// 20 21 22
//Checking Rows
for(int i=0;i&lt;3;i++)
{
if(ttt[i][0]==ttt[i][1] &amp;&amp; ttt[i][1]==ttt[i][2])
{
if(ttt[i][0]==&#39;1&#39;)
{
return 1;
}
else
{
return -1;
}
}
}

// Check colums
for(int i=0;i&lt;3;i++)
{

if(ttt[0][i]==ttt[1][i] &amp;&amp; ttt[1][i]==ttt[2][i])
{
if(ttt[1][i]==&#39;1&#39;)
{
return 1;
}
else
{
return -1;
}
}
}

// Diagonal1
if(ttt[0][0]==ttt[1][1] &amp;&amp; ttt[1][1]==ttt[2][2])
{
if(ttt[2][2]==&#39;1&#39;)
{
return 1;
}
else
{
return -1;
}
}

// Diagonal2
if(ttt[0][2]==ttt[2][2] &amp;&amp; ttt[2][2]==ttt[2][0])
{
if(ttt[2][2]==&#39;1&#39;)
{

return 1;
}
else
{
return -1;
}
}
return 0;
}
}